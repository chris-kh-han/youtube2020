{"version":3,"sources":["theme.js","components/SearchBar.js","components/PlayListItem.js","App.js","index.js"],"names":["theme","createMuiTheme","palette","useStyles","makeStyles","inputContainer","padding","spacing","inputRoot","borderRadius","height","buttonRoot","boxShadow","backgroundColor","grey","borderLeft","searchIcon","color","SearchBar","setSrc","classes","useState","searchInput","setSearchInput","useEffect","fetchSearchApi","input","url","process","fetch","then","response","json","parseData","data","results","items","filter","item","id","kind","Grid","container","justify","className","xs","OutlinedInput","root","autoFocus","fullWidth","size","placeholder","onChange","e","target","value","Button","type","onClick","preventDefault","variant","fontSize","lineHeight","PlayListItem","src","videoStat","setVideoStat","getVideoInfo","videoId","getVideoStat","statistics","title","width","frameBorder","allow","allowFullScreen","Typography","snippet","gutterBottom","viewCount","description","publishTime","App","Paper","elevation","length","map","index","ReactDOM","render","ThemeProvider","StrictMode","CssBaseline","document","getElementById"],"mappings":"iOASeA,EANDC,YAAe,CAC3BC,QAAS,K,iECGLC,EAAYC,aAAW,SAAAJ,GAAK,MAAK,CACnCK,eAAgB,CACZC,QAASN,EAAMO,QAAQ,IAAK,IAEhCC,UAAW,CACPC,aAAc,cACdC,OAAQV,EAAMO,QAAQ,IAE1BI,WAAY,CACRF,aAAc,cACdC,OAAQV,EAAMO,QAAQ,GACtBK,UAAW,OACXC,gBAAiBb,EAAME,QAAQY,KAAK,KACpCC,WAAY,QAEhBC,WAAY,CACRC,MAAOjB,EAAME,QAAQY,KAAK,UA+DnBI,MAzDf,YAAgC,IAAXC,EAAU,EAAVA,OACXC,EAAUjB,IADW,EAEWkB,mBAAS,IAFpB,mBAEpBC,EAFoB,KAEPC,EAFO,KAI3BC,qBAAW,WACPC,EAAe,MAEhB,IAEH,IAIMA,EAAiB,SAACC,GACpB,IAAMC,EAAG,uFAAmFD,EAAnF,gBAtCDE,2CAuCRC,MAAMF,GACHG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,KAAKG,IAGNA,EAAY,SAACC,GACf,IAAMC,EAAUD,EAAKE,MAAMC,QAAO,SAAAC,GAAI,MAAqB,kBAAjBA,EAAKC,GAAGC,QAClDrB,EAAOgB,IAQX,OACI,+BACI,eAACM,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASC,UAAWxB,EAAQf,eAApD,UACI,cAACoC,EAAA,EAAD,CAAMH,MAAI,EAACO,GAAI,EAAf,SACI,cAACC,EAAA,EAAD,CACI1B,QAAS,CAAE2B,KAAM3B,EAAQZ,WACzBwC,WAAS,EACTC,WAAS,EACTC,KAAK,QACLC,YAAY,SACZC,SA/BQ,SAACC,GACzB9B,EAAe8B,EAAEC,OAAOC,YAiChB,cAACd,EAAA,EAAD,CAAMH,MAAI,EAAV,SACI,cAACkB,EAAA,EAAD,CACIpC,QAAS,CAAE2B,KAAM3B,EAAQT,YACzB8C,KAAK,SACLC,QAtBQ,SAACL,GACzBA,EAAEM,iBACFlC,EAAeH,IAqBCsC,QAAQ,WAJZ,SAKI,cAAC,IAAD,CAAYC,SAAS,QAAQjB,UAAWxB,EAAQJ,uB,gBCxElEb,EAAYC,aAAW,SAAAJ,GAAK,MAAK,CACnC+C,KAAM,CACFe,WAAY,OAgDLC,MAzCf,YAAgC,IAARC,EAAO,EAAPA,IACd5C,EAAUjB,IADW,EAEOkB,mBAAS,MAFhB,mBAEpB4C,EAFoB,KAETC,EAFS,KAI3B1C,qBAAW,WACP2C,MAED,IAEH,IAAMA,EAAe,WACjB,IAAMxC,EAAG,yGAAqGqC,EAAIzB,GAAG6B,QAA5G,gBArBDxC,2CAsBRC,MAAMF,GACHG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,KAAKuC,IAGNA,EAAe,SAACnC,GAClBgC,EAAahC,EAAKE,MAAM,GAAGkC,aAO/B,OACI,eAAC7B,EAAA,EAAD,CAAMH,MAAI,EAACI,WAAS,EAACC,QAAQ,SAASpC,QAAS,EAA/C,UACI,cAACkC,EAAA,EAAD,CAAMH,MAAI,EAAV,SACI,wBAAQiC,MAAM,MAAMC,MAAM,MAAM9D,OAAO,MAAMsD,IAN/C,iCAAN,OAAwCA,EAAIzB,GAAG6B,SAM4BK,YAAY,IAAIC,MAAM,2FAA2FC,iBAAe,MAGvM,eAAClC,EAAA,EAAD,CAAMH,MAAI,EAACO,GAAI,EAAf,UACI,cAAC+B,EAAA,EAAD,CAAYhB,QAAQ,YAAYhB,UAAWxB,EAAQ2B,KAAnD,SAA0DiB,EAAIa,QAAQN,QACtE,eAACK,EAAA,EAAD,CAAYhB,QAAQ,YAAYkB,cAAY,EAAC7D,MAAM,gBAAnD,iBAAoEgD,QAApE,IAAoEA,OAApE,EAAoEA,EAAWc,UAA/E,YACA,cAACH,EAAA,EAAD,CAAYhB,QAAQ,QAAQ3C,MAAM,gBAAlC,SAAmD+C,EAAIa,QAAQG,cAC/D,cAACJ,EAAA,EAAD,CAAYhB,QAAQ,UAAU3C,MAAM,gBAApC,SAAqD+C,EAAIa,QAAQI,qB,MChBlEC,MAzBf,WAAgB,IAAD,EACS7D,mBAAS,IADlB,mBACN2C,EADM,KACD7C,EADC,KAQb,OAEI,eAACsB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAASpC,QAAS,EAA1C,UACE,cAACkC,EAAA,EAAD,CAAMH,MAAI,EAACO,GAAI,GAAf,SACE,cAACsC,EAAA,EAAD,CAAOC,UAAW,EAAlB,SACE,cAAC,EAAD,CAAWjE,OAAQA,QAIvB,cAACsB,EAAA,EAAD,CAAMH,MAAI,EAACI,WAAS,EAApB,WACKsB,EAAIqB,QAbNrB,EAAIsB,KAAK,SAAChD,EAAMiD,GAAP,OAAiB,cAAC,EAAD,CAA0BvB,IAAK1B,GAAZiD,YCLxDC,IAASC,OACP,cAACC,EAAA,EAAD,CAAe1F,MAAOA,EAAtB,SACE,eAAC,IAAM2F,WAAP,WACE,cAACC,EAAA,EAAD,IACA,cAAC,EAAD,SAGJC,SAASC,eAAe,W","file":"static/js/main.e7bad031.chunk.js","sourcesContent":["import { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n\n  },\n});\n\nexport default theme;","import React, { useState, useEffect } from \"react\"\nimport { Grid, OutlinedInput, Button } from \"@material-ui/core/\"\nimport { makeStyles } from \"@material-ui/styles\";\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst API_KEY = process.env.REACT_APP_YOUTUBE_API_KEY;\n\nconst useStyles = makeStyles(theme => ({\n    inputContainer: {\n        padding: theme.spacing(1.5, 0)\n    },\n    inputRoot: {\n        borderRadius: '2px 0 0 2px',\n        height: theme.spacing(4),\n    },\n    buttonRoot: {\n        borderRadius: '0 2px 2px 0',\n        height: theme.spacing(4),\n        boxShadow: 'none',\n        backgroundColor: theme.palette.grey[100],\n        borderLeft: 'none'\n    },\n    searchIcon: {\n        color: theme.palette.grey[600]\n    }\n}));\n\n\n\nfunction SearchBar({ setSrc }) {\n    const classes = useStyles();\n    const [searchInput, setSearchInput] = useState('')\n\n    useEffect( () => {\n        fetchSearchApi('')\n        // eslint-disable-next-line\n    }, [])\n\n    const onChangeSearchInput = (e) => {\n        setSearchInput(e.target.value)\n    }\n\n    const fetchSearchApi = (input) => {\n        const url = `https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=5&q=${input}&key=${API_KEY}`\n        fetch(url)\n          .then(response => response.json())\n          .then(parseData)\n    }\n\n    const parseData = (data) => {\n        const results = data.items.filter(item => item.id.kind === \"youtube#video\");\n        setSrc(results)\n    }\n\n    const onClickSearchButton = (e) => {\n        e.preventDefault();\n        fetchSearchApi(searchInput);\n    }\n\n    return (\n        <form>\n            <Grid container justify=\"center\" className={classes.inputContainer}>  \n                <Grid item xs={6}>\n                    <OutlinedInput \n                        classes={{ root: classes.inputRoot }}\n                        autoFocus \n                        fullWidth\n                        size=\"small\" \n                        placeholder=\"Search\"\n                        onChange={onChangeSearchInput} \n                        />\n                </Grid>\n                <Grid item>\n                    <Button \n                        classes={{ root: classes.buttonRoot }}\n                        type=\"submit\" \n                        onClick={onClickSearchButton} \n                        variant=\"outlined\">\n                        <SearchIcon fontSize=\"small\" className={classes.searchIcon}/>\n                    </Button>\n                </Grid>\n            </Grid>\n        </form>\n    )\n}\n\nexport default SearchBar","import React, { useState, useEffect } from \"react\"\nimport { Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst API_KEY = process.env.REACT_APP_YOUTUBE_API_KEY;\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        lineHeight: 1,\n        // color: theme.palette.primary.main\n    },\n}));\n\n\n\nfunction PlayListItem({ src }) {\n    const classes = useStyles();\n    const [videoStat, setVideoStat] = useState(null)\n\n    useEffect( () => {\n        getVideoInfo() \n        // eslint-disable-next-line\n    }, [])\n\n    const getVideoInfo = () => {\n        const url = `https://youtube.googleapis.com/youtube/v3/videos?part=snippet%2CcontentDetails%2Cstatistics&id=${src.id.videoId}&key=${API_KEY}`\n        fetch(url)\n          .then(response => response.json())\n          .then(getVideoStat)\n    }\n\n    const getVideoStat = (data) => {\n        setVideoStat(data.items[0].statistics)\n    }\n\n    const getYoutubeSrc = () => {\n        return `https://www.youtube.com/embed/${src.id.videoId}`\n    }\n\n    return (\n        <Grid item container justify=\"center\" spacing={3}>\n            <Grid item>\n                <iframe title=\"sex\" width=\"300\" height=\"166\" src={getYoutubeSrc()} frameBorder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\n            </Grid>\n\n            <Grid item xs={6}>\n                <Typography variant=\"subtitle1\" className={classes.root}>{src.snippet.title}</Typography>\n                <Typography variant=\"subtitle2\" gutterBottom color=\"textSecondary\">{videoStat?.viewCount} views</Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\">{src.snippet.description}</Typography>\n                <Typography variant=\"caption\" color=\"textSecondary\">{src.snippet.publishTime}</Typography>\n            </Grid>\n        </Grid>\n    )\n   \n}\n\nexport default PlayListItem","import React, { useState } from \"react\";\nimport { Grid, Paper } from '@material-ui/core';\n\nimport SearchBar from './components/SearchBar'\nimport PlayListItem from './components/PlayListItem'\n\nimport './App.css';\n\nfunction App() {\n  const [src, setSrc] = useState([])\n  \n\n  const renderPlayList = () => {\n    return src.map( (item, index) => <PlayListItem key={index} src={item} />)\n  }\n\n  return (\n    \n      <Grid container justify=\"center\" spacing={5}>\n        <Grid item xs={12}>\n          <Paper elevation={0}>\n            <SearchBar setSrc={setSrc} />\n          </Paper>\n        </Grid>\n        \n        <Grid item container>\n          {!!src.length && renderPlayList()}\n        </Grid>\n      </Grid>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\nimport App from './App';\n\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <React.StrictMode>\n      <CssBaseline />\n      <App />\n    </React.StrictMode>\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}